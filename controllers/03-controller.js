const utils = require("../utils");

/*‚ö†Ô∏è No modificar nada arriba de esta l√≠nea ‚ö†Ô∏è
  3Ô∏è‚É£ * EJERCICIO 3 * - updatePersonaje 3Ô∏è‚É£:
 
  üü¢ Debes buscar por ID un personaje recibido por par√°metro dentro del array de utils.personajes y actualizar las propiedades: nombre y numeroEpisodio. Tambi√©n agr√©gale una nueva propiedad llamada "casa".
  üü¢ Si no encuentras el personaje debes arrojar un error que diga: "No se encontr√≥ el personaje solicitado".
  üü¢ Si alguna de las propiedades {nombre, numeroEpisodio o casa} del personaje es undefined, debe arrojar un error que diga: "Faltan datos a completar".

    üì¢ PUNTOS A TENER EN CUENTA üì¢
  1) Recuerda que el mensaje de error debe ser exactamente como lo pide el enunciado.
  2) Recuerda agregar la nueva propiedad "casa", √©sta no se encuentra en examples.js
*/

const updatePersonaje = (personaje) => {
  // Tu c√≥digo aqu√≠
  // Buscar el personaje por ID
  const personajeExistente = utils.personajes.find((p) => p.id === personaje.id);

  // Verificar si el personaje existe
  if (!personajeExistente) {
    throw new Error('No se encontr√≥ el personaje solicitado');
  }

  // Verificar si alguna de las propiedades {nombre, numeroEpisodio o casa} es undefined
  if (personaje.nombre === undefined || personaje.numeroEpisodio === undefined || personaje.casa === undefined) {
    throw new Error('Faltan datos a completar');
  }

  // Actualizar las propiedades del personaje
  personajeExistente.nombre = personaje.nombre;
  personajeExistente.numeroEpisodio = personaje.numeroEpisodio;
  personajeExistente.casa = personaje.casa;

  // Devolver el personaje actualizado
  return personajeExistente;
};

// ‚ö†Ô∏è No modificar nada debajo de esta l√≠nea ‚ö†Ô∏è
module.exports = updatePersonaje;
