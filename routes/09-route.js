const router = require("express").Router();
const updatePersonaje = require("../controllers/03-controller");
/* ‚ö†Ô∏è No modificar nada arriba de esta l√≠nea ‚ö†Ô∏è

  9Ô∏è‚É£ * EJERCICIO 9 * - PUT / personaje 9Ô∏è‚É£:

  üü¢ Integrar la funci√≥n updatePersonaje que desarrollaste previamente (Ejercicio 3) para actualizar el personaje.
  üü¢ Responder con un objeto que tenga una propiedad "message" con el valor de "Personaje actualizado correctamente".
  üü¢ Si hay un error, responder un objeto con una propiedad "error" y que el valor sea el error.message.

    üì¢ PUNTOS A TENER EN CUENTA üì¢
  1) Si algo falla al actualizar el personaje, debes responder con el mensaje del error.
  2) Recibir√°s los argumentos necesarios para ejecutar esa funci√≥n updatePersonaje mediante la propiedad "body" de req.
  3) ¬°Revisa en los tests el status que deben tener tus respuestas!
*/

router.put("/personaje", async(req, res) => {
  // Tu c√≥digo aqu√≠

  const { personaje } = req.body;
try{
  const resultado= updatePersonaje(personaje);
  res.status(200).json({message: "Personaje actualizado correctamente"})
} catch (error) {
  res.status(400).json({error: error.message})
}
 


   
});
//‚ö†Ô∏è No modificar nada debajo de esta l√≠nea ‚ö†Ô∏è
module.exports = router;
